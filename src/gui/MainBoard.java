/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Shape;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;


/**
 *
 * @author Jefferson
 */
public class MainBoard extends javax.swing.JFrame {

    private GridLayout BOARD;
    private boolean player = false;
    private ArrayList<TokenView> list_tokens;
    private HashMap<String,TokenView> hash_tokens;
    private String[][] matrix;
    /**
     * Creates new form MainBoard
     */
    public MainBoard() {
        initComponents();
        //this.list_tokens = new ArrayList<>();
        this.matrix = new String[8][8];
        this.hash_tokens = new HashMap<>();
        this.BOARD = new GridLayout(8,8,0,0);
        this.pn_board.setLayout(BOARD);
        for(int i = 0; i<8; i++){
            for(int j = 0; j<8; j++){
                final TokenView token = new TokenView(Color.WHITE,i,j);
                this.hash_tokens.put(token.getID(),token);
                this.pn_board.add(token, BorderLayout.CENTER);
                this.matrix[i][j] = token.getID();
                token.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        if(!token.isHint()){
                            return;
                        }
                        
                        Color tmp = player ? Color.YELLOW : Color.RED;
                        token.setColorInGame(tmp);
                        //System.out.println("clicked");
                        player = !player;
                        System.out.println(token.getID());
                        refreshBoard();
                    }
                    
                    @Override
                    public void mouseEntered(MouseEvent e) {
                        if(token.isHint()){
                            token.setHover();
                        }
                    }
                    
                    public void mouseExited(MouseEvent e) {
                        if(token.isHint()){
                            token.deleteHover();
                        }
                    }
                });
            }
        }
        refreshBoard();
    }
    
    private void cleanBoard(){
        for (TokenView tk : hash_tokens.values()) {
            tk.reInit();
        }
        refreshBoard();
        System.out.println("CleanBoard performed");
    }
    
    public void refreshBoard(){
        for(int i=0; i<8; i++){
            for(int j=7; j>=0; j--){
                TokenView tk = hash_tokens.get(matrix[j][i]);
                if(tk.isLocked())
                    continue;
                else{
                    tk.setLikeHint();
                    break;
                }
            }
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mni_help = new javax.swing.JMenuItem();
        pnl_general_info = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        pn_board = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        mn_bar = new javax.swing.JMenuBar();
        mn_options = new javax.swing.JMenu();
        mni_new_game = new javax.swing.JMenuItem();
        mni_chk_hint = new javax.swing.JCheckBoxMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mni_exit = new javax.swing.JMenuItem();
        mn_about = new javax.swing.JMenu();

        mni_help.setText("Ayuda");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Connect4 - IA Games");

        javax.swing.GroupLayout pnl_general_infoLayout = new javax.swing.GroupLayout(pnl_general_info);
        pnl_general_info.setLayout(pnl_general_infoLayout);
        pnl_general_infoLayout.setHorizontalGroup(
            pnl_general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnl_general_infoLayout.setVerticalGroup(
            pnl_general_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pn_boardLayout = new javax.swing.GroupLayout(pn_board);
        pn_board.setLayout(pn_boardLayout);
        pn_boardLayout.setHorizontalGroup(
            pn_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        pn_boardLayout.setVerticalGroup(
            pn_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        mn_options.setText("Opciones");

        mni_new_game.setText("Nuevo juego");
        mni_new_game.setActionCommand("mni_new_game");
        mni_new_game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_new_gameActionPerformed(evt);
            }
        });
        mn_options.add(mni_new_game);

        mni_chk_hint.setSelected(true);
        mni_chk_hint.setText("Mostrar ayuda");
        mn_options.add(mni_chk_hint);
        mn_options.add(jSeparator1);

        mni_exit.setText("Salir");
        mn_options.add(mni_exit);

        mn_bar.add(mn_options);

        mn_about.setText("Acerca de");
        mn_bar.add(mn_about);

        setJMenuBar(mn_bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_general_info, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(pn_board, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_general_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn_board, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mni_new_gameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_new_gameActionPerformed
        cleanBoard();
    }//GEN-LAST:event_mni_new_gameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JMenu mn_about;
    private javax.swing.JMenuBar mn_bar;
    private javax.swing.JMenu mn_options;
    private javax.swing.JCheckBoxMenuItem mni_chk_hint;
    private javax.swing.JMenuItem mni_exit;
    private javax.swing.JMenuItem mni_help;
    private javax.swing.JMenuItem mni_new_game;
    private javax.swing.JPanel pn_board;
    private javax.swing.JPanel pnl_general_info;
    // End of variables declaration//GEN-END:variables
}
